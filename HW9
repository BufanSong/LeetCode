HW9 Dynamic Programming 2
Date: June 24 2019
Bufan Song
-----------------------------------------------------------------------------------------------------------------------------
Warm Up: 
72. Edit Distance
Given two words word1 and word2, find the minimum number of operations required to convert word1 to word2.

You have the following 3 operations permitted on a word:
Insert a character
Delete a character
Replace a character
Example 1:
Input: word1 = "horse", word2 = "ros"
Output: 3
Explanation: 
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')
-----------------------------------------------------------------------------------------------------------------------------
Sol:
class Solution {
    public int minDistance(String word1, String word2) {
        int m = word1.length();
        int n = word2.length();
        int[][] cost = new int[m+1][n+1];
        for (int i = 0; i <= m; i++){
            cost[i][0] = i;
        }
        for (int j = 0; j <= n; j++){
            cost[0][j] = j;
        }
        
        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                if (word1.charAt(i) == word2.charAt(j))
                    cost[i+1][j+1] = cost[i][j];
                else{
                    int replace = cost[i][j];
                    int insert = cost[i][j+1];
                    int delete = cost[i+1][j];
                    cost[i+1][j+1] = Math.min(replace, Math.min(insert, delete))+1;
                }
            }
        }
        return cost[m][n];
        
    }
}

